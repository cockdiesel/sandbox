(function (a, t, d, u) {function v(b) {"down" == b.options.direction ? (a(b.active).removeClass("ui-corner-all").addClass("ui-corner-top"), a(b.activeSelection).removeClass("ui-corner-left").addClass("ui-corner-tl"), a(b.items).addClass("ui-corner-bottom").css("top", parseInt(Math.ceil(a(b.active).position().top), 10) + parseInt(a(b.active).css("line-height"), 10) + 1), a(b.items).width() > a(b.active).width() && a(b.items).addClass("ui-corner-tr")) : (a(b.active).removeClass("ui-corner-all").addClass("ui-corner-bottom"),a(b.activeSelection).removeClass("ui-corner-left").addClass("ui-corner-bl"), a(b.items).addClass("ui-corner-top").css("top", parseInt(Math.ceil(a(b.active).position().top)) - a(b.items).height() - 1), a(b.items).width() > a(b.active).width() && a(b.items).addClass("ui-corner-br")); var c = a(b.items).find("li:eq(" + b.element.options.selectedIndex + ")"); a(c).addClass("select-menu-item-hover"); a(c).children("i").addClass("select-menu-icon-hover"); a(b.items).show("slide", {direction: "down" == b.options.direction ? "up" :"down"}, 200, function () { var g = a(c).position().top; 260 < parseInt(g) && a(b.items).scrollTop(a(c).position().top - 60); a(this).css("overflow-y", "auto") })} function m(b) {"down" == b.options.direction ? (a(b.items).css("overflow-y", "hidden").hide("slide", { direction: "up" }, 200, function () { a(this).removeClass("ui-corner-tr") }), a(b.activeSelection).removeClass("ui-corner-tl").addClass("ui-corner-left"), a(b.active).removeClass("ui-corner-top").addClass("ui-corner-all")) : (a(b.items).css("overflow-y", "hidden").hide("slide",{ direction: "down" }, 200, function () { a(this).removeClass("ui-corner-br") }), a(b.activeSelection).removeClass("ui-corner-bl").addClass("ui-corner-left"), a(b.active).removeClass("ui-corner-bottom").addClass("ui-corner-all"))} function s(a, c) {if ("#text" != c.nodeName.toLowerCase()) {var g = c.getAttribute("class"), h = d.createElement("li"); h.setAttribute("data-value", c.value); var e = d.createTextNode(c.text); h.appendChild(e); var f; null != g && (f = d.createElement("i"), f.setAttribute("class", g + " icon-fixed-width"), h.insertBefore(f,e)); a.appendChild(h)}} var n = 1, l = function (b, c) { this.element = b; this.$element = a(b); this.options = a.extend({}, a.fn.selectMenu.defaults, c); this._init() }; l.prototype = {_init: function () { this.seed = n; this._createElements(); this._bindEvents(); n++ }, _createElements: function () {var a = parseInt(t.getComputedStyle(d.getElementsByTagName("html")[0]).fontSize, 10); this.element.style.visibility = "hidden"; this.element.style.display = "none"; this.element.style.opacity = 0; var c = d.createElement("div"); c.setAttribute("class", "select-menu-active ui-corner-all");c.setAttribute("data-selectmenu", n); c.style.width = this.options.width + "px"; c.style.width = parseFloat(this.options.width / a) + "rem"; var g = d.createElement("div"); g.setAttribute("class", "select-list-active-item ui-corner-left"); g.style.width = this.options.width + "px"; g.style.width = parseFloat(this.options.width / a) - 2.5 + "rem"; var h = d.createElement("div"), e = d.createElement("i"); e.setAttribute("class", this.options.icon); c.appendChild(g); h.appendChild(e); c.appendChild(h); var f = d.createElement("div"); f.setAttribute("class","select-menu-items"); f.style.width = null == this.options.menuWidth ? this.options.width : this.options.menuWidth + "px"; f.style.width = null == this.options.menuWidth ? parseFloat(this.options.width / a) : parseFloat(this.options.menuWidth / a) + "rem"; a = d.createElement("ul"); a.setAttribute("class", "select-menu-items"); for (var p = 0; p < this.element.childNodes.length; p++) {var k = this.element.childNodes[p], e = k.nodeName.toLowerCase(); if ("optgroup" == e && k.hasChildNodes()) {var q = d.createElement("ul"); q.setAttribute("class", "select-menu-items-group");q.setAttribute("optgroup", k.getAttribute("label")); var e = k.getAttribute("class"), r = d.createElement("span"), m = d.createTextNode(k.getAttribute("label")); r.setAttribute("class", "select-menu-items-group"); r.appendChild(m); var l; null != e && (l = d.createElement("i"), l.setAttribute("class", e + " icon-fixed-width"), r.insertBefore(l, m)); for (e = 0; e < k.childNodes.length; e++) s(q, k.childNodes[e]); a.appendChild(r); a.appendChild(q)} else "option" == e && s(a, k); 0 == p && g.appendChild(d.createTextNode(0 == this.element.options[0].text.length ?String.fromCharCode(160) : this.element.options[0].text))} f.appendChild(a); this.$element.after(f); this.$element.after(c); this.active = c; this.activeSelection = g; this.activeIcon = h; this.items = f}, _bindEvents: function () {var b = this; a(b.active).bind("click", function () { v(b) }); var c = a(b.items).find("ul.select-menu-items > li,ul.select-menu-items-group > li"); a(c).bind("click", function () {var c = a(this).parents("ul").attr("optgroup"); if (c == u ? 0 : c) b.$element.find("optgroup[label='" + c + "'] option:eq(" + a(this).index() +")").prop("selected", "selected"); else { var d = a(this).index(), c = a(this).parents("ul:first").children("ul"), e = a(this).parents("ul:first").children("li"); if (0 != c.length) { var f = 0; c.each(function (b) { a(this).index() < d && a(this).children("li").each(function () { f++ }) }); e.each(function (b) { a(this).index() < d && f++ }); 0 != f && (d = f) } b.$element.prop("selectedIndex", d) } a(b.activeSelection).text(a(this).text())}); a(c).bind("mouseenter", function () {a(c).each(function () { a(this).removeClass("select-menu-item-hover"); a(this).children("i").removeClass("select-menu-icon-hover") });a(this).addClass("select-menu-item-hover"); a(this).children("i").addClass("select-menu-icon-hover")}); a(c).bind("mouseleave", function () { a(this).removeClass("select-menu-item-hover"); a(this).children("i").removeClass("select-menu-icon-hover") }); a(b.activeIcon).bind("click", function (c) { a(b.items).is(":visible") && (m(b), c.stopImmediatePropagation()) }); a(d).bind("click", function (c) { 0 == a(c.target).parents("div.select-menu-active").length && -1 == c.target.className.indexOf("select-menu-active") && m(b) })}, _unbindEvents: function () {var b =this; a(b.active).unbind("click"); var c = a(b.items).find("ul.select-menu-items > li,ul.select-menu-items-group > li"); a(c).unbind("click"); a(c).unbind("mouseenter"); a(c).unbind("mouseleave"); a(b.activeIcon).unbind("click"); a(d).unbind("click", function (c) { 0 == a(c.target).parents("div.select-menu-active").length && -1 == c.target.className.indexOf("select-menu-active") && m(b) })}, destroy: function () { this._unbindEvents() }}; a.fn.selectMenu = function (b) {return this.each(function () {a.data(this, "selectMenu") ? a.isFunction(l.prototype[b]) &&(a.data(this, "selectMenu")[b](), "destroy" == b && (a.removeData(this, "selectMenu"), n = 1)) : a.data(this, "selectMenu", new l(this, b))})}; a.fn.selectMenu.defaults = { width: 220, menuWidth: 220, direction: "down", icon: "icon-chevron-down" }})(jQuery, window, document);